@model CourseListViewModel    //rende fortemente tipizzata la view su tutta la classe CourseListViewModel
<div class="row">
    <div class="col-md-8">
        <h1>@ViewData["Title"]</h1>
    </div>
    <div class="col-md-4 d-flex align-items-center">
        <form asp-asp-controller="Courses" asp-action="Index" method="Get"><!--Action Index del CoursesController, get invia tramite querystring -->
            <div class="input-group">
                <input type="text" name="search" class="form-control" placeholder="Cerca ..." aria-label="Cerca..." aria-describedby="search-button" value="@Model.Input.Search">   
                <!--search: nome della chiave digitato dall'utente e visibile nel link, model.input.search mi permette di vedere nel form il valore che ho cercato -->
                <div class="input-group-append">
                    <button class="input-group-text" id="search-button"><i class="fas fa-search"></i></button>
                </div>
            </div>
        </form>
    </div>
</div>

<div class="row">
    <!--@Model.Input.Search mi permette di evitare che la chiave di ricerca vada persa-->
    <!--Se il campo OrderBy del Model.Input = Title, mi devi restituire un senso invertito (!Model.Input.Ascending), altrimenti restituiscimi true-->
    <!--Se il mio tipo di ordine é uguale a Title: se la visualizzazione é ascending, stampami la freccia "up", altrimenti "down"-->
    <div class="col-md-1"></div>
    <div class="col-md-5"><a asp-route-orderby="Title" asp-route-ascending="@(Model.Input.OrderBy == "Title" ? !Model.Input.Ascending : true)" asp-route-search="@Model.Input.Search">Titolo @if(Model.Input.OrderBy == "Title") {<i class="fas fa-caret-@(Model.Input.Ascending ? "up" : "down")"></i> }</a></div>
    <div class="col-md-2"><a asp-route-orderby="Rating" asp-route-ascending="@(Model.Input.OrderBy == "Rating" ? !Model.Input.Ascending : true)" asp-route-search="@Model.Input.Search">Valutazione @if(Model.Input.OrderBy == "Rating") {<i class="fas fa-caret-@(Model.Input.Ascending ? "up" : "down")"></i> }</a></div>
    <div class="col-md-2"><a asp-route-orderby="CurrentPrice" asp-route-ascending="@(Model.Input.OrderBy == "CurrentPrice" ? !Model.Input.Ascending : true)" asp-route-search="@Model.Input.Search">Prezzo @if(Model.Input.OrderBy == "CurrentPrice") {<i class="fas fa-caret-@(Model.Input.Ascending ? "up" : "down")"></i> }</a></div>
    <div class="col-md-2"></div>
</div>

@foreach(CourseViewModel course in Model.Courses) //foreach produce il codice a seguire per ogni corso trovato all'interno del Model
{                                         //richiama gli elementi presenti in CourseViewModel 
<hr>
<div class="row course">
    <div class="col-md-1"> 
        <img src="@course.ImagePath" width="52" height="52">    
    </div>
    <div class="col-md-5">  
        <h2>@course.Title</h2>  
        <author>@course.Author</author>
    </div>
    <div class="col-md-2 rating" title="@course.Rating">  
        @for(int i = 1; i <= 5; i++){
            if(course.Rating >= i)          //es: 4.5 > 1, poi incremento: 4.5 > 2, ecc.., 4.5 < 5, stampa la stella intera
            {
                <i class="fas fa-star"></i>
            }
            else if (course.Rating > i -1) //es: 4.5 > 5-1(4), allora stampa la stella a metà
            {
                <i class="fas fa-star-half-alt"></i>
            }
            else{                           //in tutti gli altri casi: stella vuota
                <i class="far fa-star"></i>
            }
        }
    </div>
    <div class="col-md-2 price">
        @course.CurrentPrice
        @if(!course.CurrentPrice.Equals(course.FullPrice)){  //se i prezzi non sono uguali, allora stampami anche il prezzo intero
            <br/><s>@course.FullPrice</s>
        }
    </div>
    <div class="col-md-2 d-flex align-items-center">
        <a class="btn btn-outline-primary" asp-action="Detail" asp-route-id="@course.Id">Dettaglio</a>   
    </div>
</div>
}

<!--b-pagination-->
<nav aria-label="Paginazione">
    <ul class="pagination d-flex justify-content-center mt-3">
        <li class="page-item active" aria-current="page">
            <a class="page-link" asp-route-page="1">Page 1 <span class="sr-only">(current)</span></a>
        </li>
        <li class="page-item">
            <a class="page-link" asp-route-page="2">Page 2</a>
        </li>
        <li class="page-item">
            <a class="page-link" asp-route-page="3">Page 3</a>
        </li>
    </ul>
</nav>

